name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -i private_key -o StrictHostKeyChecking=no -r ./* ${USER}@${HOST}:/app/telegram-server/
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
          cd /app/telegram-server/
          source .venv/bin/activate
          /home/ubuntu/.cargo/bin/uv pip install -r requirements.txt

          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "BOT_AT=${{ secrets.BOT_AT }}" >> .env
          echo "BOT_URL=${{ secrets.BOT_URL }}" >> .env
          echo "LOGFIRE_LEVEL=${{ secrets.LOGFIRE_LEVEL }}" >> .env
          echo "LOGFIRE_TOKEN=${{ secrets.LOGFIRE_TOKEN }}" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env

          pm2 reload aws/ecosystem.config.js --update-env
        '

    - name: Cleanup
      run: rm -f private_key
